#version 460

#extension GL_EXT_scalar_block_layout: enable

layout(set = 0, binding = 0, rgba8) uniform image2D rawImage;
layout(set = 0, binding = 1, rgba8) uniform image2D resultImage;
layout(set = 0, binding = 2, scalar) uniform Settings {
	uint kernelSize;
	float sigma;
} settings;
layout(set = 0, binding = 3, scalar) buffer GB { float g[]; } gaussBuffer;


#define GAUSS_ARRAY_MAX_SIZE 20


void main() {
	ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
	vec4 color = vec4(0.0);
	ivec2 size = imageSize(rawImage);
	int off = int(settings.kernelSize / 2.0);

	for (int x = -off; x <= off; x++) {
		for (int y = -off; y <= off; y++) {
			ivec2 p = pos + ivec2(x, y);
			if (0 <= p.x && p.x < size.x && 0 <= p.y && p.y < size.y) {
				color += imageLoad(rawImage, p) * gaussBuffer.g[x + off] * gaussBuffer.g[y + off];
			}
		}
	}

	imageStore(resultImage, pos, color);
}
