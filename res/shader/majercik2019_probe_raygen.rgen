#version 460


#include "majercik2019.glsl"


void main() {
	uint surfelIndex = uint(gl_LaunchIDEXT.y) * renderSettings.perProbeRayCount + uint(gl_LaunchIDEXT.x);

	uint se = 2 * renderSettings.singleDirectionProbeCount + 1;
	uint i = uint(gl_LaunchIDEXT.y);

	uint x = (i % se);
	i = (i - x) / se;

	uint y = (i % se);
	i = (i - y) / se;

	uint z = (i % se);
	
	ivec3 prepos = ivec3(x, y, z) - ivec3(renderSettings.singleDirectionProbeCount);

	RaySendInfo rayInfo;
	rayInfo.origin = renderSettings.betweenProbeDistance * vec3(prepos);
	rayInfo.direction = sphericalFibonacci(float(gl_LaunchIDEXT.x), float(renderSettings.perProbeRayCount));
	rayInfo.backfaceCulling = false;

	RaySendInfo rayInfoCopy = rayInfo;
	for (int i = 0; i < renderSettings.visionJumpCount; i++) {
		rayInfoCopy = rayInfo;
		traceRay(rayInfo);

		if (!rayPayload.hit) break;

		uint traceValue = handleHit(rayInfo, i);

		if (traceValue == DIFFUSE_VALUE) {
			break;
		}
	}

	surfels.s[surfelIndex].rayDirection = rayInfoCopy.direction;
	
	if (rayPayload.hit) {
		vec3 modifiedPos = rayPayload.pos + renderSettings.normalBias * rayPayload.normal;
		surfels.s[surfelIndex].hitRadiance = rayPayload.color * getIlluminationByShadowtrace(vec3(gl_LaunchIDEXT), modifiedPos, rayPayload.normal);
		surfels.s[surfelIndex].hitDistance = length(rayInfoCopy.origin - modifiedPos);
		surfels.s[surfelIndex].hit = true;
	} else {
		surfels.s[surfelIndex].hitRadiance = vec3(0.0);
		surfels.s[surfelIndex].hitDistance = 0.0;
		surfels.s[surfelIndex].hit = false;
	}
}
