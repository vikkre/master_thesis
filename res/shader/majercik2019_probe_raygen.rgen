#version 460


#include "majercik2019.glsl"


void main() {
	RNG rng = initRNG(gl_LaunchIDEXT);

	uint surfelIndex = gl_LaunchIDEXT.x * renderSettings.perProbeRayCount + gl_LaunchIDEXT.y;

	uint i = gl_LaunchIDEXT.x;

	uint x = (i % renderSettings.probeCount.x);
	i = (i - x) / renderSettings.probeCount.x;

	uint y = (i % renderSettings.probeCount.y);
	i = (i - y) / renderSettings.probeCount.y;

	uint z = (i % renderSettings.probeCount.z);
	
	vec3 probePos = vec3(x, y, z) * renderSettings.betweenProbeDistance + renderSettings.probeStartCorner;
	vec3 direction = sphericalFibonacci(float(gl_LaunchIDEXT.y), float(renderSettings.perProbeRayCount));

	RaySendInfo rayInfo;
	rayInfo.origin = probePos;
	rayInfo.direction = direction;
	rayInfo.backfaceCulling = false;

	for (int i = 0; i < renderSettings.visionJumpCount; i++) {
		traceRay(rayInfo);

		if (!rayPayload.hit) break;

		uint traceValue = handleHit(rayInfo, rng);

		if (traceValue == DIFFUSE_VALUE) {
			break;
		}
	}

	surfels.s[surfelIndex].rayDirection = direction;
	
	if (rayPayload.hit) {
		vec3 modifiedPos = rayPayload.pos + renderSettings.normalBias * rayPayload.normal;
		surfels.s[surfelIndex].hitRadiance = rayPayload.color * getIlluminationByShadowtrace(rng, modifiedPos, rayPayload.normal, renderSettings.shadowCountProbe);
		surfels.s[surfelIndex].hitDistance = length(rayInfo.prevOrigin - modifiedPos);
		surfels.s[surfelIndex].hit = true;
	} else {
		surfels.s[surfelIndex].hitRadiance = vec3(0.0);
		surfels.s[surfelIndex].hitDistance = 0.0;
		surfels.s[surfelIndex].hit = false;
	}
}
