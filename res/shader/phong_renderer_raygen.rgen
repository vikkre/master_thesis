#version 460


#include "phong_renderer.glsl"


void main() {
	RaySendInfo rayInfo = getVisionRay(gl_LaunchIDEXT.xy, gl_LaunchSizeEXT.xy);
	traceRay(rayInfo);

	if (rayPayload.hit) {
		vec3 toLightNormal = normalize(LIGHT_POSITION - rayPayload.pos);
		vec3 reflectedLightNormal = reflect(-toLightNormal, rayPayload.normal);
		vec3 toViewerNormal = -rayInfo.direction;

		vec3 ambientColor = renderSettings.ambientConstant * rayPayload.color;
		vec3 diffuseColor = renderSettings.diffuseConstant * dot(toLightNormal, rayPayload.normal) * rayPayload.color;
		vec3 specularColor = vec3(renderSettings.specularConstant * pow(dot(reflectedLightNormal, toViewerNormal), renderSettings.shininessConstant));

		// vec3 color = ambientColor + diffuseColor + specularColor;
		vec3 color = ambientColor + diffuseColor;
		imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(color, 0.0));
	} else {
		imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(0.0));
	}
}
